/* tslint:disable */
/* eslint-disable */
/**
 * backend.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DigInvAssetClass,
  DigInvAssetClasses,
  DigInvElementId,
  RpcStatus,
} from '../models/index';
import {
    DigInvAssetClassFromJSON,
    DigInvAssetClassToJSON,
    DigInvAssetClassesFromJSON,
    DigInvAssetClassesToJSON,
    DigInvElementIdFromJSON,
    DigInvElementIdToJSON,
    RpcStatusFromJSON,
    RpcStatusToJSON,
} from '../models/index';

export interface AssetClassServiceCreateAssetClassRequest {
    body: DigInvAssetClass;
}

export interface AssetClassServiceDeleteAssetClassRequest {
    body: DigInvElementId;
}

export interface AssetClassServiceGetAssetClassRequest {
    body: object;
}

export interface AssetClassServiceGetAssetClassesRequest {
    body: object;
}

export interface AssetClassServiceUpdateAssetClassRequest {
    body: DigInvAssetClass;
}

/**
 * 
 */
export class AssetClassServiceApi extends runtime.BaseAPI {

    /**
     */
    async assetClassServiceCreateAssetClassRaw(requestParameters: AssetClassServiceCreateAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DigInvAssetClass>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling assetClassServiceCreateAssetClass().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/dig_inv.AssetClassService/CreateAssetClass`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DigInvAssetClassToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DigInvAssetClassFromJSON(jsonValue));
    }

    /**
     */
    async assetClassServiceCreateAssetClass(requestParameters: AssetClassServiceCreateAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DigInvAssetClass> {
        const response = await this.assetClassServiceCreateAssetClassRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async assetClassServiceDeleteAssetClassRaw(requestParameters: AssetClassServiceDeleteAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling assetClassServiceDeleteAssetClass().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/dig_inv.AssetClassService/DeleteAssetClass`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DigInvElementIdToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async assetClassServiceDeleteAssetClass(requestParameters: AssetClassServiceDeleteAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.assetClassServiceDeleteAssetClassRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async assetClassServiceGetAssetClassRaw(requestParameters: AssetClassServiceGetAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DigInvAssetClass>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling assetClassServiceGetAssetClass().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/dig_inv.AssetClassService/GetAssetClass`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DigInvAssetClassFromJSON(jsonValue));
    }

    /**
     */
    async assetClassServiceGetAssetClass(requestParameters: AssetClassServiceGetAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DigInvAssetClass> {
        const response = await this.assetClassServiceGetAssetClassRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async assetClassServiceGetAssetClassesRaw(requestParameters: AssetClassServiceGetAssetClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DigInvAssetClasses>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling assetClassServiceGetAssetClasses().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/dig_inv.AssetClassService/GetAssetClasses`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DigInvAssetClassesFromJSON(jsonValue));
    }

    /**
     */
    async assetClassServiceGetAssetClasses(requestParameters: AssetClassServiceGetAssetClassesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DigInvAssetClasses> {
        const response = await this.assetClassServiceGetAssetClassesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async assetClassServiceUpdateAssetClassRaw(requestParameters: AssetClassServiceUpdateAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DigInvAssetClass>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling assetClassServiceUpdateAssetClass().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/dig_inv.AssetClassService/UpdateAssetClass`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DigInvAssetClassToJSON(requestParameters['body']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DigInvAssetClassFromJSON(jsonValue));
    }

    /**
     */
    async assetClassServiceUpdateAssetClass(requestParameters: AssetClassServiceUpdateAssetClassRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DigInvAssetClass> {
        const response = await this.assetClassServiceUpdateAssetClassRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
